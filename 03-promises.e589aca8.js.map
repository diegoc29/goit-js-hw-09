{"mappings":"iiBAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAuBT,EAvBmBC,EAuBhB,KAtBR,IAAIG,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACL,WAAUC,UAEpBK,EAAO,CAACN,WAAUC,S,GAElBA,E,KAeNS,MAAK,SAAAC,GAAUA,EAARX,SAAeW,EAALV,MAChBW,QAAQC,IAAI,gD,IAEbC,OAAM,SAAAH,GAAUA,EAARX,SAAeW,EAALV,MACjBW,QAAQC,IAAI,+C,IAGdE,EAAAb,GAASc,OAAOC,KAAK,CAACC,gBAAgB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n       reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n\nfunction showSuccessNotification(position, delay) {\n  Notiflix.Notify.Success('✅ Fulfilled promise ${position} in ${delay}ms');\n}\n\nfunction showErrorNotification(position, delay) {\n  Notiflix.Notify.Failure('❌ Rejected promise ${position} in ${delay}ms');\n\n}\n\ncreatePromise(2, 1500)\n.then(({position, delay}) => {\n  console.log('✅ Fulfilled promise ${position} in ${delay}ms');\n})\n.catch(({position, delay}) =>{\n  console.log('❌ Rejected promise ${position} in ${delay}ms');\n});\n\nNotiflix.Notify.init({useFontAwesome: true,});\n"],"names":["position","delay","$6JpON","parcelRequire","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","catch","$parcel$interopDefault","Notify","init","useFontAwesome"],"version":3,"file":"03-promises.e589aca8.js.map"}