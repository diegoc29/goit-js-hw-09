{"mappings":"qhBAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAuBT,EAvBmBC,EAuBhB,KAtBR,IAAIG,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACL,E,MAAUC,IAEpBK,EAAO,C,SAACN,E,MAAUC,GAAO,GAEzBA,EAAM,KAeZS,MAAK,EAACV,SAACA,EAAQC,MAAEA,MAChBU,QAAQC,IAAI,gDAAkD,IAE/DC,OAAM,EAACb,SAACA,EAAQC,MAAEA,MACjBU,QAAQC,IAAI,+CAA+C,IAGzDE,cAAgBC,aAClBC,EAAAd,GAASe,OAAOC,QAAQ,IAE1BF,EAAAd,GAASe,OAAOE,KAAK,CAACC,gBAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n       reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n\nfunction showSuccessNotification(position, delay) {\n  Notiflix.Notify.Success('✅ Fulfilled promise ${position} in ${delay}ms');\n}\n\nfunction showErrorNotification(position, delay) {\n  Notiflix.Notify.Failure('❌ Rejected promise ${position} in ${delay}ms');\n\n}\n\ncreatePromise(2, 1500)\n.then(({position, delay}) => {\n  console.log('✅ Fulfilled promise ${position} in ${delay}ms');\n})\n.catch(({position, delay}) =>{\n  console.log('❌ Rejected promise ${position} in ${delay}ms');\n});\n\nif (selectedDate <= currentDate) {\n  Notiflix.Notify.failure('');\n} \nNotiflix.Notify.init({useFontAwesome: true,});\n"],"names":["position","delay","$7Y9D8","parcelRequire","Promise","resolve","reject","setTimeout","Math","random","then","console","log","catch","selectedDate","currentDate","$parcel$interopDefault","Notify","failure","init","useFontAwesome"],"version":3,"file":"03-promises.56af2ae7.js.map"}