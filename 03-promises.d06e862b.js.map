{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbO,SAASC,eAAe,gBAAgBC,iBAAiB,UAAUC,eAAgBC,GACjFA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASC,MACxBC,EAAaC,SAASJ,EAASK,IAAI,UACnCC,EAAOF,SAASJ,EAASK,IAAI,SACnC,IAAIE,EAASH,SAASJ,EAASK,IAAI,WAEfX,SAASC,eAAe,gBAEhCC,iBAAiB,SAASC,iBACpC,GAAIU,GAAU,EACZC,EAAAzB,GAAS0B,OAAOC,QAAQ,sCAI1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAC/B,MAAMxB,EAAQgB,EAAaQ,EAAIL,EAC/B,IACE,MAAMM,QAAe3B,EAAc0B,EAAI,EAAGxB,GAC1CqB,EAAAzB,GAAS0B,OAAOI,QAAQ,uBAAqBD,EAAI1B,eAAoB0B,EAAEzB,U,CACvE,MAAO2B,GACPN,EAAAzB,GAAS0B,OAAOC,QAAQ,sBAAoBI,EAAE5B,eAAmB4B,EAAE3B,U,SAM3EqB,EAAAzB,GAAS0B,OAAOM,KAAK,CAAEC,gBAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.getElementById(\"promise-form\").addEventListener(\"submit\", async function (event) {\n  event.preventDefault();\n\n  const formData = new FormData(this);\n  const firstDelay = parseInt(formData.get(\"delay\"));\n  const step = parseInt(formData.get(\"step\"));\n  let amount = parseInt(formData.get(\"amount\"));\n\n  const startButton = document.getElementById(\"start-button\"); // Agregué esta línea para obtener el botón de inicio\n\n  startButton.addEventListener(\"click\", async function () {\n    if (amount <= 0) {\n      Notiflix.Notify.failure('Amount must be greater than 0');\n      return;\n    }\n  \n    for (let i = 0; i < amount; i++) {\n      const delay = firstDelay + i * step;\n      try {\n        const result = await createPromise(i + 1, delay);\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      } catch (error) {\n        Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      }\n    }\n  });\n});\n\nNotiflix.Notify.init({ useFontAwesome: true });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","getElementById","addEventListener","async","event","preventDefault","formData","FormData","this","firstDelay","parseInt","get","step","amount","$parcel$interopDefault","Notify","failure","i","result","Success","error","init","useFontAwesome"],"version":3,"file":"03-promises.d06e862b.js.map"}